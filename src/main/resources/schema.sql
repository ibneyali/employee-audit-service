-- Create ADDRESS table
CREATE TABLE ADDRESS (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ADDRESS_LINE_1 VARCHAR(255) NOT NULL,
    ADDRESS_LINE_2 VARCHAR(255),
    ADDRESS_LINE_3 VARCHAR(255),
    COUNTRY VARCHAR(100) NOT NULL,
    POSTAL_CODE VARCHAR(20),
    CREATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_BY VARCHAR(100)
);

-- Create DEPARTMENT table
CREATE TABLE DEPARTMENT (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    CREATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_BY VARCHAR(100)
);

-- Create TRAINING table
CREATE TABLE TRAINING (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(1000),
    CREATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_BY VARCHAR(100)
);

-- Create EMPLOYEE table
CREATE TABLE EMPLOYEE (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FIRST_NAME VARCHAR(100) NOT NULL,
    LAST_NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(255) UNIQUE NOT NULL,
    PHONE VARCHAR(20),
    DEPARTMENT_ID BIGINT,
    ADDRESS_ID BIGINT,
    CREATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_BY VARCHAR(100),
    VERSION INT DEFAULT 0,
    FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(ID),
    FOREIGN KEY (ADDRESS_ID) REFERENCES ADDRESS(ID)
);

-- Create EMPLOYEE_TRAINING table
CREATE TABLE EMPLOYEE_TRAINING (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMP_ID BIGINT NOT NULL,
    TRAINING_ID BIGINT NOT NULL,
    DATE_OF_ALLOCATION DATE,
    STATUS VARCHAR(20),
    CREATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_TIMESTAMP TIMESTAMP NOT NULL,
    UPDATED_BY VARCHAR(100),
    FOREIGN KEY (EMP_ID) REFERENCES EMPLOYEE(ID),
    FOREIGN KEY (TRAINING_ID) REFERENCES TRAINING(ID)
);

-- Create AUDIT_TABLE for auditing purposes
CREATE TABLE AUDIT_TABLE (
    EVENT_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EVENT_DOMAIN VARCHAR(100),
    EVENT_ENTITY VARCHAR(100),
    EVENT_ENTITY_ID BIGINT,
    EVENT_NAME VARCHAR(50),
    EVENT_PAYLOAD CLOB,
    EVENT_SUMMARY VARCHAR(255),
    EVENT_ENTITY_VERSION INT,
    EVENT_TIMESTAMP TIMESTAMP,
    ENTRY_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    EVENT_INITIATOR VARCHAR(100)
);

-- JaVers tables (compatible with HSQLDB - using CLOB instead of TEXT)
-- Using GENERATED BY DEFAULT AS IDENTITY for auto-increment PKs (HSQLDB compatible)
CREATE TABLE jv_global_id (
    global_id_pk BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    local_id VARCHAR(191),
    fragment VARCHAR(200),
    type_name VARCHAR(200),
    owner_id_fk BIGINT,
    CONSTRAINT jv_global_id_owner_id_fk FOREIGN KEY(owner_id_fk) REFERENCES jv_global_id(global_id_pk)
);

CREATE INDEX jv_global_id_local_id_idx ON jv_global_id(local_id);
CREATE INDEX jv_global_id_owner_id_fk_idx ON jv_global_id(owner_id_fk);

CREATE TABLE jv_commit (
    commit_pk BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author VARCHAR(200),
    commit_date TIMESTAMP,
    commit_date_instant VARCHAR(30),
    commit_id NUMERIC(22,2)
);

CREATE INDEX jv_commit_commit_id_idx ON jv_commit(commit_id);

CREATE TABLE jv_commit_property (
    property_name VARCHAR(191) NOT NULL,
    property_value VARCHAR(600),
    commit_fk BIGINT NOT NULL,
    CONSTRAINT jv_commit_property_pk PRIMARY KEY(commit_fk, property_name),
    CONSTRAINT jv_commit_property_commit_fk FOREIGN KEY(commit_fk) REFERENCES jv_commit(commit_pk)
);

CREATE INDEX jv_commit_property_commit_fk_idx ON jv_commit_property(commit_fk);
CREATE INDEX jv_commit_property_property_name_property_value_idx ON jv_commit_property(property_name, property_value);

CREATE TABLE jv_snapshot (
    snapshot_pk BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type VARCHAR(200),
    version BIGINT,
    state CLOB,
    changed_properties CLOB,
    managed_type VARCHAR(200),
    global_id_fk BIGINT,
    commit_fk BIGINT,
    CONSTRAINT jv_snapshot_global_id_fk FOREIGN KEY(global_id_fk) REFERENCES jv_global_id(global_id_pk),
    CONSTRAINT jv_snapshot_commit_fk FOREIGN KEY(commit_fk) REFERENCES jv_commit(commit_pk)
);

CREATE INDEX jv_snapshot_global_id_fk_idx ON jv_snapshot(global_id_fk);
CREATE INDEX jv_snapshot_commit_fk_idx ON jv_snapshot(commit_fk);

-- Create indexes for better performance
CREATE INDEX IDX_EMPLOYEE_EMAIL ON EMPLOYEE(EMAIL);
CREATE INDEX IDX_EMPLOYEE_DEPARTMENT ON EMPLOYEE(DEPARTMENT_ID);
CREATE INDEX IDX_EMPLOYEE_TRAINING_EMP ON EMPLOYEE_TRAINING(EMP_ID);
CREATE INDEX IDX_EMPLOYEE_TRAINING_TRAINING ON EMPLOYEE_TRAINING(TRAINING_ID);
